# Event Target Documentation
### controller
Scope to the controller of the object
Input Scopes: province, state
Output Scopes: country

### land_controller_hq
Returns the province or state controller land HQ
Input Scopes: province, state
Output Scopes: hq

### land_hq
Returns the province or state owner local land HQ
Input Scopes: province, state
Output Scopes: hq

### region_state
Unknown, add something in code registration
Requires Data: yes
Input Scopes: state_region
Output Scopes: state

### ai_treaty_export_value
Scope to target country AI desire to export scoped market good (example: value = ai_market_export_value:root)
Requires Data: yes
Input Scopes: market_goods
Output Scopes: value

### ai_treaty_import_value
Scope to target country AI desire to import scoped market good through treaties (example: value = ai_market_import_value:root)
Requires Data: yes
Input Scopes: market_goods
Output Scopes: value

### ai_treaty_trade_value
Scope to target country AI desire to import and export scoped market good (example: value = ai_market_trade_value:root)
Requires Data: yes
Input Scopes: market_goods
Output Scopes: value

### momentum
Get the scoped party's raw momentum
Input Scopes: party
Output Scopes: value

### type
Scope from an object to its type
Input Scopes: building, company, diplomatic_play, diplomatic_catalyst, political_lobby, institution, interest_group, law, political_movement, harvest_condition_area
Output Scopes: building_type, company_type, diplomatic_play_type, institution_type, interest_group_type, law_type, political_movement_type, harvest_condition_type

### attacker_warleader
Scope to the attacker warleader of a war
Input Scopes: war
Output Scopes: country

### defender_warleader
Scope to the defender warleader of a war
Input Scopes: war
Output Scopes: country

### diplomatic_play
Scope from a war to its diplomatic play
Input Scopes: war
Output Scopes: diplomatic_play

### first_country
Scope to the first_country of any of:
1. diplomatic pact
2. treaty
3. treaty options
4. treaty article's treaty
5. treaty article options (for mutual article types only)
Input Scopes: diplomatic_pact, treaty_article, treaty_options, treaty_article_options, treaty
Output Scopes: country

### second_country
Scope to the second_country of any of:
1. diplomatic pact
2. treaty
3. treaty options
4. treaty article's treaty
5. treaty article options (for mutual article types only)
Input Scopes: diplomatic_pact, treaty_article, treaty_options, treaty_article_options, treaty
Output Scopes: country

### input_building_type
Scope to the building type input in a treaty article
Input Scopes: treaty_article, treaty_article_options
Output Scopes: building_type

### input_company
Scope to the company input in a treaty article
Input Scopes: treaty_article, treaty_article_options
Output Scopes: company

### input_country
Scope to the country input in a treaty article
Input Scopes: treaty_article, treaty_article_options
Output Scopes: country

### input_goods
Scope to the goods input in a treaty article
Input Scopes: treaty_article, treaty_article_options
Output Scopes: goods

### input_law
Scope to the law input in a treaty article
Input Scopes: treaty_article, treaty_article_options
Output Scopes: law_type

### input_market_goods
Scope to the market goods input in a treaty article (example: input_market_goods:root)
Requires Data: yes
Input Scopes: treaty_article, treaty_article_options
Output Scopes: market_goods

### input_quantity
Scope to the quantity input in a treaty article
Input Scopes: treaty_article, treaty_article_options
Output Scopes: value

### input_state
Scope to the state input in a treaty article
Input Scopes: treaty_article, treaty_article_options
Output Scopes: state

### input_strategic_region
Scope to the strategic region input in a treaty article
Input Scopes: treaty_article, treaty_article_options
Output Scopes: strategic_region

### source_country
Scope to the source_country of any of:
1. treaty article (for directed article types only)
2. treaty article options (for directed article types only)
Input Scopes: treaty_article, treaty_article_options
Output Scopes: country

### target_country
Scope to the target_country of any of:
1. treaty article (for directed article types only)
2. treaty article options (for directed article types only)
Input Scopes: treaty_article, treaty_article_options
Output Scopes: country

### leader
Scope to the leader of the interest group
Input Scopes: interest_group
Output Scopes: character

### lobby_join_weight
Scope to the join weight of an interest group to a particular lobby (lobby_join_weight:root >= 5)
Requires Data: yes
Input Scopes: interest_group
Output Scopes: value

### party
Scope to the party that an IG is supporting
Input Scopes: interest_group
Output Scopes: party

### goal_value
Scope to the journal entry's goal value
Input Scopes: journal_entry
Output Scopes: value

### amended_treaty
Scope to the treaty the scoped treaty is amending
Input Scopes: treaty_options, treaty
Output Scopes: treaty

### binding_period
Get the original binding period in days when the treaty was signed for the scoped treaty
Input Scopes: treaty_options, treaty
Output Scopes: value

### remaining_binding_period
Get the current remaining binding period in days for the scoped treaty
Input Scopes: treaty_options, treaty
Output Scopes: value

### shipping_lane
Scope to the shipping lane for the military formation, or treaty article (goods transfer)
Input Scopes: military_formation, treaty_article
Output Scopes: shipping_lanes

### initiator
Scope to the initiator of the object
Input Scopes: diplomatic_play
Output Scopes: country

### war
Scope from a diplomatic play to its war
Input Scopes: diplomatic_play
Output Scopes: war

### mg
Scope from a market to the MarketGoods with the specified key
Requires Data: yes
Input Scopes: market
Output Scopes: market_goods

### participants
Get the total number of participating countries in the scoped market
Input Scopes: market
Output Scopes: value

### trade_center
Scope to the trade center state of the market!
Input Scopes: market
Output Scopes: state

### level
Scope to the level of a building
Input Scopes: building
Output Scopes: value

### level_after_queued_constructions
Scope to the level of a building after all queued constructions finish
Input Scopes: building
Output Scopes: value

### training_rate
Scope to the current maximum weekly training rate of a building
Input Scopes: building
Output Scopes: value

### executive
Scope from a company to its executive character
Input Scopes: company
Output Scopes: character

### prosperity
Scope to the amount of prosperity for scope company (example: prosperity >= 2)
Input Scopes: company
Output Scopes: value

### weekly_prosperity_change
Scope to the weekly prosperity change for scope company (example: weekly_prosperity_change >= 2)
Input Scopes: company
Output Scopes: value

### target
Scope to the target of the object
Input Scopes: diplomatic_play, diplomatic_catalyst, political_lobby, journal_entry

### average_defense
Returns the average defense of units on Front on the same side as Country
Requires Data: yes
Input Scopes: front
Output Scopes: value

### average_offense
Returns the average offense of units on Front on the same side as Country
Requires Data: yes
Input Scopes: front
Output Scopes: value

### front_length
Returns the number of provinces in Front
Input Scopes: front
Output Scopes: value

### invasion
Returns the invasion of the scoped front if any
Input Scopes: front
Output Scopes: invasion

### num_defending_battalions
Returns the total number of units in battle on Front on the same side as Country
Requires Data: yes
Input Scopes: front
Output Scopes: value

### num_total_battalions
Returns the total number of units on Front on the same side as Country
Requires Data: yes
Input Scopes: front
Output Scopes: value

### market
Scope to the market of the object
Input Scopes: country, building, market, market_goods, province, state, state_goods, state_region
Output Scopes: market

### treaty
Scope to the treaty a treaty article belongs to
Input Scopes: treaty_article
Output Scopes: treaty

### identity
Scope to the central identity for the scoped power bloc
Input Scopes: power_bloc
Output Scopes: power_bloc_identity

### num_mandates
Scope to the number of available mandates of the scoped power bloc (power_bloc.num_mandates > 0)
Input Scopes: power_bloc
Output Scopes: value

### power_bloc_leader
Scope to the leader country of the scoped power bloc
Input Scopes: power_bloc
Output Scopes: country

### power_struggle_contender
Scope to the contender country if there is a power struggle
Input Scopes: power_bloc
Output Scopes: country

### state
Scope to the state of the object
Input Scopes: building, market, pop, province
Output Scopes: state

### invasion_attacker
If used in an invasion scope, scope to the country executing the invasion.
Input Scopes: invasion
Output Scopes: country

### invasion_defender
If used in an invasion scope, scope to the country the attacked state is controlled by.
Input Scopes: invasion
Output Scopes: country

### diplomatic_pact_other_country
Scope to the other country of the diplomatic pact in scope
Requires Data: yes
Input Scopes: diplomatic_pact
Output Scopes: country

### political_movement
If used in a character scope, scope to the political movement that character supports.
If used in a revolution civil war scope, scope to the movement that started the revolution.
If used in an interest group scope, scope to the group's dominant movement.
Input Scopes: character, civil_war
Output Scopes: political_movement

### battle
Scope from a battle side to the battle itself
Input Scopes: battle_side
Output Scopes: battle

### opposite_battle_side
Scope from a battle side to its opposite
Input Scopes: battle_side
Output Scopes: battle_side

### province
Scope from a battle side to the province in which the battle is being fought
Input Scopes: battle_side
Output Scopes: province

### region
Scope to the strategic region of the object!
Input Scopes: building, diplomatic_play, hq, interest_marker, province, state, state_region
Output Scopes: strategic_region

### player_owed_obligation_days_left
Scope to number of days left on an obligation in diplomatic relations scope (example: obligation_days_left >= 2)
Input Scopes: diplomatic_relations
Output Scopes: value

### scope_relations
Scope to relations value in diplomatic relations scope (example: scope_relations >= 2)
Input Scopes: diplomatic_relations
Output Scopes: value

### scope_tension
Scope to tension value in diplomatic relations scope (example: scope_tension >= 2)
Input Scopes: diplomatic_relations
Output Scopes: value

### country
Scope to the country of a military formation
Input Scopes: military_formation
Output Scopes: country

### current_hq
Returns the current HQ of the scoped military formation (may not be valid if the formation is not currently stationed in an HQ)
Input Scopes: military_formation
Output Scopes: hq

### highest_ranked_commander
Scope from a military formation to its highest ranking commander character
Input Scopes: military_formation
Output Scopes: character

### home_hq
Returns the home HQ of the scoped military formation
Input Scopes: military_formation
Output Scopes: hq

### num_commanderless_units
Number of units in a MilitaryFormation which currently don't have a commander due to commanders Command Limit. Obs: defeated commanders do not command units, i.e., the more defeated commanders, the more commanderless units.
Input Scopes: military_formation
Output Scopes: value

### front
Scope to a front from various scopes
	From a battle to the front where it takes place
	From a character to the front where they are at or travelling towards
	From a military formation to the front it is currently at
	From a province to the front that contains it	From an invasion to the invasion front
Input Scopes: battle, character, military_formation, invasion, province
Output Scopes: front

### modifier
Scope to the value of the modifier type of specified key belonging to the current object
Requires Data: yes
Input Scopes: country, battle_side, building, character, interest_group, market, power_bloc, state
Output Scopes: value, boolean

### array_define
Reference the value of a numeric value in an array define: array_define:Namespace|Name|Index. Index is 0-based.
Requires Data: yes
Global Link: yes
Output Scopes: value

### bt
Scope to a building type
Requires Data: yes
Global Link: yes
Output Scopes: building_type

### c
Scope to the country with specified tag
Requires Data: yes
Global Link: yes
Output Scopes: country

### catalyst_type
Scope to a diplomatic catalyst type from its name (catalyst_type:catalyst_relations_level_improved)
Requires Data: yes
Output Scopes: diplomatic_catalyst_type

### cd
Scope to the country definition with specified tag
Requires Data: yes
Global Link: yes
Output Scopes: country_definition

### company_type
Scope to a company type from its name (company_type:company_rheinmetall)
Requires Data: yes
Output Scopes: company_type

### compare_complex_value
A comparison trigger that needs a parsable string parameter that will return its value in the context it is used eg: scope:root.number_of(armies)
Wild Card: yes
Requires Data: yes
Output Scopes: value

### compare_value
A comparison trigger that will return its value in the context it is used eg: root.gold
Wild Card: yes
Output Scopes: value

### cu
Scope to the culture with specified key
Requires Data: yes
Global Link: yes
Output Scopes: culture

### define
Reference the value of a numeric or color define: define:Namespace|Name
Requires Data: yes
Global Link: yes
Output Scopes: value

### flag
Flag literals eg: flag:the_boss
Requires Data: yes
Global Link: yes
Output Scopes: flag

### g
Scope to the goods with specified key
Requires Data: yes
Global Link: yes
Output Scopes: goods

### global_gdp
Get the global yearly predicted GDP
Output Scopes: value

### global_productivity
Scope to global productivity values (example: global_productivity:high_threshold)
Requires Data: yes
Output Scopes: value

### global_var
Reference a previous set global variable via its name eg: global_var:important_thing
Requires Data: yes
Global Link: yes

### harvest_condition_type
Scope to a harvest condition type from its name (harvest_condition_type:drought)
Requires Data: yes
Output Scopes: harvest_condition_type

### i
Scope to ideology specified by key
Requires Data: yes
Global Link: yes
Output Scopes: ideology

### identity
Scope to the power bloc identity from its name (identity:key)
Requires Data: yes
Output Scopes: power_bloc_identity

### ideology
Scope to a ideology from its name (ideology:ideology_anarchist)
Requires Data: yes
Output Scopes: ideology

### ig_trait
Scope to the Interest Group trait with specified key
Requires Data: yes
Global Link: yes
Output Scopes: interest_group_trait

### ig_type
Scope to an interest group type
Requires Data: yes
Global Link: yes
Output Scopes: interest_group_type

### infamy_threshold
Scope to infamy level threshold for comparison purposes (infamy_threshold:infamous)
Requires Data: yes
Output Scopes: value

### is_setup
Scope to true/false if gamestate is being initialized!
Global Link: yes
Output Scopes: value

### je_tutorial
Scope to the active tutorial lesson's journal entry (do not use this outside tutorial)
Output Scopes: journal_entry

### law_type
Scope to a law type from its name (law_type:law_protected_speech)
Requires Data: yes
Output Scopes: law_type

### lobby_type
Scope to a political lobby type from its name (lobby_type:lobby_pro_country)
Requires Data: yes
Output Scopes: political_lobby_type

### local_var
Reference a previous set local variable via its name eg: local_var:person_of_interest
Requires Data: yes
Global Link: yes

### mobilization_option
Scope to a mobilization option from its name (mobilization_option:key)
Requires Data: yes
Output Scopes: mobilization_option

### movement_type
Scope to a political movement type from its name (movement_type:movement_religious_majority)
Requires Data: yes
Output Scopes: political_movement_type

### named_script_value
A script value that will calculate and returns its value in the context it is used
Wild Card: yes
Output Scopes: value, color

### no
Boolean literal for false values
Global Link: yes
Output Scopes: boolean

### p
Scope to province specified by hex key
Requires Data: yes
Global Link: yes
Output Scopes: province

### play_type
Scope to a diplomatic play type from its name (play_type:dp_default_treaty_article)
Requires Data: yes
Output Scopes: diplomatic_play_type

### player
Scope to the player (do not use this outside tutorial)
Output Scopes: country

### pop_type
Scope to a pop type from its name (pop_type:laborers)
Requires Data: yes
Output Scopes: pop_type

### prev
The previous scope
Global Link: yes

### principle
Scope to the power bloc principle from its name (principle:key)
Requires Data: yes
Output Scopes: power_bloc_principle

### principle_group
Scope to the power bloc principle group from its name (principle_group:key)
Requires Data: yes
Output Scopes: power_bloc_principle_group

### rank_value
Scope to rank value of a particular country rank (rank_value:great_power)
Requires Data: yes
Output Scopes: value

### rel
Scope to the religion with specified key
Requires Data: yes
Global Link: yes
Output Scopes: religion

### relations_threshold
Scope to relations threshold level for comparison purposes (relations_threshold:warm)
Requires Data: yes
Output Scopes: value

### root
The head of the current top scope eg: reciever of an event, taker of a decision
Global Link: yes

### s
Scope to state region specified by key
Requires Data: yes
Global Link: yes
Output Scopes: state_region

### scope
Reference a previously saved scope via its name eg: scope:target
Requires Data: yes
Global Link: yes

### sr
Scope to the strategic region of specified key
Requires Data: yes
Global Link: yes
Output Scopes: strategic_region

### tension_threshold
Scope to tension level threshold for comparison purposes (tension_threshold:warm)
Requires Data: yes
Output Scopes: value

### this
The current scope

### unit_type
Scope to a combat unit type from its name (unit_type:key)
Requires Data: yes
Output Scopes: combat_unit_type

### value
A numeric literal value eg: 1, 5.2, -6
Wild Card: yes
Global Link: yes
Output Scopes: value

### var
Reference a previous set variable via its name eg: var:mortal_enemy
Requires Data: yes

### yes
Boolean literal for true values
Global Link: yes
Output Scopes: boolean

### theater
Scope from a BattleSide or State to its theater
Input Scopes: battle_side, state
Output Scopes: theater

### active_law
Scope to the scoped country's active law in the named law group (active_law:lawgroup_trade_policy)
Requires Data: yes
Input Scopes: country
Output Scopes: law

### ai_army_comparison
Scope to comparative army strength between two countries (example: value = ai_army_comparison:root)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### ai_gdp_comparison
Scope to comparative GDP between two countries (example: value = ai_army_comparison:root)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### ai_ideological_opinion
Scope to AI ideological opinion of scope country on target country (example: value = ai_ideological_opinion:root)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### ai_navy_comparison
Scope to comparative navy strength between two countries (example: value = ai_navy_comparison:root)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### ai_subject_value
Scope to AI desire of target country to have scope country as a subject (example: value = ai_subject_value:root)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### ai_transit_rights_value
Scope to AI desire of to have transit rights through target country (example: value = ai_transit_rights_value:root)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### ai_treaty_fairness
Scope to AI evaluation of how fair (to both sides) it considers existing treaty articles with the target country to be (example: value = ai_treaty_fairness_score:root)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### ai_treaty_value
Scope to AI evaluation of how favorable to itself it considers existing treaty articles with the target country to be (example: value = ai_treaty_value:root)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### army_size
Number of battalions of scope country, excluding currently raised conscripts.
army_size >= 20
army_size > c:FRA.army_size
Input Scopes: country
Output Scopes: value

### army_size_including_conscripts
Number of battalions of scope country, including currently raised conscripts.
army_size_including_conscripts >= 20
army_size_including_conscripts > c:FRA.army_size_including_conscripts
Input Scopes: country
Output Scopes: value

### building_levels
Get the total number of non-subsistence building levels of the scoped country
Input Scopes: country
Output Scopes: value

### cached_ai_coastal_population
Scope to total coastal population recorded in AI spending variables (example: value = cached_ai_coastal_population)
Input Scopes: country
Output Scopes: value

### cached_ai_incorporated_coastal_population
Scope to total incorporated coastal population recorded in AI spending variables (example: value = cached_ai_incorporated_coastal_population)
Input Scopes: country
Output Scopes: value

### cached_ai_incorporated_population
Scope to total incorporated population recorded in AI spending variables (example: value = cached_ai_incorporated_population)
Input Scopes: country
Output Scopes: value

### cached_ai_overseas_subject_population
Scope to total population in direct non-adjacent subjects recorded in AI spending variables (example: value = cached_ai_overseas_subject_population)
Input Scopes: country
Output Scopes: value

### cached_ai_subject_population
Scope to total population in direct subjects recorded in AI spending variables (example: value = cached_ai_subject_population)
Input Scopes: country
Output Scopes: value

### cached_ai_total_population
Scope to total population recorded in AI spending variables (example: value = cached_ai_total_population)
Input Scopes: country
Output Scopes: value

### cached_ai_unincorporated_coastal_population
Scope to total unincorporated coastal population recorded in AI spending variables (example: value = cached_ai_unincorporated_coastal_population)
Input Scopes: country
Output Scopes: value

### cached_ai_unincorporated_population
Scope to total unincorporated population recorded in AI spending variables (example: value = cached_ai_unincorporated_population)
Input Scopes: country
Output Scopes: value

### capital
Scope to the capital state of a country
Input Scopes: country
Output Scopes: state

### civil_war_origin_country
Scope to the origin country of a civil war country
Input Scopes: country
Output Scopes: country

### colonial_growth_per_colony
Scope to the country's colonial growth per colony value (example: colonial_growth_per_colony > 0)
Input Scopes: country
Output Scopes: value

### company
Scope to the scoped country's company of the named company type (company:company_rheinmetall)
Requires Data: yes
Input Scopes: country
Output Scopes: company

### country_definition
Scope to country's definition
Input Scopes: country
Output Scopes: country_definition

### credit
Scope to the current amount of max credit the country can take
Input Scopes: country
Output Scopes: value

### currently_enacting_law
Scope from a country to the law that they're currently enacting
Input Scopes: country
Output Scopes: law

### expenses
Get the current weekly expenses of the scoped country
Input Scopes: country
Output Scopes: value

### fixed_expenses
Get the current weekly fixed expenses of the scoped country
Input Scopes: country
Output Scopes: value

### get_ruler_for
Scopes from country to a character that would be ruler, under the given transfer of power type
get_ruler_for:parliamentary_elective = { effects... }
Requires Data: yes
Input Scopes: country
Output Scopes: character

### government_size
Get the scoped country's current number of Parties & independent IGs in government
Input Scopes: country
Output Scopes: value

### heir
Scope to the heir of a country
Input Scopes: country
Output Scopes: character

### imposed_law
Scope from a country to the law currently imposed on them (enacting or not)
Input Scopes: country
Output Scopes: law

### income
Get the current weekly income of the scoped country
Input Scopes: country
Output Scopes: value

### income_transfer_expenses
Scope to the amount of money scope country is transfering to other countries via treaties & pacts (example:income_transfer_expenses >= 100)
Input Scopes: country
Output Scopes: value

### income_transfer_relative_expenses
Scope to the fraction of their income country is transfering to other countries via treaties & pacts (example:income_transfer_relative_expenses >= 0.2)
Input Scopes: country
Output Scopes: value

### infamy
Scope to infamy of scope country (example: infamy >= 2)
Input Scopes: country
Output Scopes: value

### institution
Scope to a country's institution from its name (institution:institution_health_system)
Requires Data: yes
Input Scopes: country
Output Scopes: institution

### investment_pool_income
Get the current weekly investment pool income of the scoped country
Input Scopes: country
Output Scopes: value

### je
Scope to the journal entry of specified key belonging to the country
Requires Data: yes
Input Scopes: country
Output Scopes: journal_entry

### legitimacy
Scope to the current amount of legitimacy in country
Input Scopes: country
Output Scopes: value

### lobby_foreign_anti_clout
Scope to the total clout of all anti-country foreign policy lobbies targeting a specific country (lobby_foreign_anti_clout:root >= 0.2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### lobby_foreign_pro_clout
Scope to the total clout of all pro-country foreign policy lobbies targeting a specific country (lobby_foreign_pro_clout:root >= 0.2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### lobby_in_government_foreign_anti_clout
Scope to the total clout of all anti-country foreign policy lobbies in government targeting a specific country (lobby_in_government_foreign_anti_clout:root >= 0.2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### lobby_in_government_foreign_pro_clout
Scope to the total clout of all pro-country foreign policy lobbies in government targeting a specific country (lobby_in_government_foreign_pro_clout:root >= 0.2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### lobby_war_opposition
Scope to the total clout of all lobbies that oppose the scoped war (lobby_war_opposition:root >= 0.2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### lobby_war_support
Scope to the total clout of all lobbies that support the scoped war (lobby_war_support:root >= 0.2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### market_capital
Scope to the market capital of a country
Input Scopes: country
Output Scopes: state

### military_expenses
Get the current military expenses (slaves, wages and goods) of the scoped country
Input Scopes: country
Output Scopes: value

### military_expenses_share
Get the current share of military expenses (slaves, wages and goods) relative to the total expenses of the scoped country
Input Scopes: country
Output Scopes: value

### mutual_trade_value_with_country
Scope to the total base value of goods traded in trade routes between the two markets (example: mutual_trade_value_with_country:root >= 1000)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### navy_size
Number of flotillas of scope country.
navy_size >= 20
navy_size > c:FRA.navy_size
Input Scopes: country
Output Scopes: value

### num_active_declared_interests
Scope to the number of active declared interests a country has
num_active_declared_interests > 5
Input Scopes: country
Output Scopes: value

### num_active_interests
Scope to the number of active interests a country has
num_active_interests > 5
Input Scopes: country
Output Scopes: value

### num_active_natural_interests
Scope to the number of active natural interests a country has
num_active_natural_interests > 5
Input Scopes: country
Output Scopes: value

### num_active_plays
Get the current number of active Diplomatic Plays the scoped country started
Input Scopes: country
Output Scopes: value

### num_admirals
Scope to the country's number of admirals
Input Scopes: country
Output Scopes: value

### num_alliances
Get the total number of alliances of the scoped country (example: num_alliances:root >= 2)
Input Scopes: country
Output Scopes: value

### num_alliances_and_defensive_pacts_with_allies
Scope to the number of alliances target country has with allies of scope country (example: num_alliances_and_defensive_pacts_with_allies:root >= 2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### num_alliances_and_defensive_pacts_with_rivals
Scope to the number of alliances & defensive pacts target country has with rivals of scope country (example: num_alliances_and_defensive_pacts_with_rivals:root >= 2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### num_characters
Scope to the country's number of characters
Input Scopes: country
Output Scopes: value

### num_colony_projects
Get the scoped country's current number of incomplete / in progress colony projects
Input Scopes: country
Output Scopes: value

### num_commanders
Scope to the country's number of commanders
Input Scopes: country
Output Scopes: value

### num_convoys_available
Get the scoped country's current number of available convoys
Input Scopes: country
Output Scopes: value

### num_convoys_required
Get the scoped country's current number of required convoys
Input Scopes: country
Output Scopes: value

### num_declared_interests
Scope to the number of declared interests a country has (including inactive)
num_declared_interests > 5
Input Scopes: country
Output Scopes: value

### num_defensive_pacts
Scope to the number of defensive pacts target country has in total (example: num_defensive_pacts >= 2)
Input Scopes: country
Output Scopes: value

### num_generals
Scope to the country's number of generals
Input Scopes: country
Output Scopes: value

### num_income_transfer_pacts
Scope to the number of income-transfering (to others) pacts target country has in total (example: num_income_transfer_pacts >= 2)
Input Scopes: country
Output Scopes: value

### num_income_transfer_treaty_articles
Scope to the number of income-transfering (to others) treaty articles target country has in total (example: num_income_transfer_treaty_articles >= 2)
Input Scopes: country
Output Scopes: value

### num_income_transfers
Scope to the number of income-transfering (to others) pacts and treaty articles target country has in total (example: num_income_transfers >= 2)
Input Scopes: country
Output Scopes: value

### num_incorporated_states
Get the scoped country's current number of incorporated states
Input Scopes: country
Output Scopes: value

### num_interests
Scope to the number of interests a country has (including inactive)
num_interests > 5
Input Scopes: country
Output Scopes: value

### num_natural_interests
Scope to the number of natural interests a country has (including inactive)
num_natural_interests > 5
Input Scopes: country
Output Scopes: value

### num_obligations_earned
Scope from a country to the number of obligations others owe them (=which they have earned)
Input Scopes: country
Output Scopes: value

### num_pending_events
Scope to the number of pending events in scope country
num_pending_events > 0
Input Scopes: country
Output Scopes: value

### num_pending_events
Scope to the number of pending events of given category in scope country
num_pending_events:enactment > 0
Requires Data: yes
Input Scopes: country
Output Scopes: value

### num_politicians
Scope to the country's number of politicians
Input Scopes: country
Output Scopes: value

### num_positive_relations
Get the current number of countries with positive Relation with the scoped country
Input Scopes: country
Output Scopes: value

### num_queued_constructions
Scope to the number of queued constructions target country has in total (example: num_queued_constructions >= 2)
Input Scopes: country
Output Scopes: value

### num_queued_government_constructions
Scope to the number of queued government constructions target country has in total (example: num_queued_government_constructions >= 2)
Input Scopes: country
Output Scopes: value

### num_queued_private_constructions
Scope to the number of queued private constructions target country has in total (example: num_queued_private_constructions >= 2)
Input Scopes: country
Output Scopes: value

### num_rivals
Scope to the number of rivals target country has in total (example: num_rivals >= 2)
Input Scopes: country
Output Scopes: value

### num_ruling_igs
Get the scoped country's current number of IGs in government
Input Scopes: country
Output Scopes: value

### num_shared_rivals
Scope to the number of shared rivals scope country has with target country (example: num_shared_rivals:root >= 2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### num_states
Get the scoped country's current number of states
Input Scopes: country
Output Scopes: value

### num_unincorporated_states
Get the scoped country's current number of unincorporated states
Input Scopes: country
Output Scopes: value

### overlord
Scope to the direct overlord of the country in scope
Input Scopes: country
Output Scopes: country

### owning_company
Scope to the company owning the scoped country
Input Scopes: country
Output Scopes: company

### power_bloc
Scope to the power bloc for the scoped country
Input Scopes: country
Output Scopes: power_bloc

### py
Scope to the active party of specified key belonging to the country
Requires Data: yes
Input Scopes: country
Output Scopes: party

### relations
Scope to relations between two countries (example: relations:root >= 2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### relations_change_rate
Scope to daily change in relations progress between two countries (example: relations_change_rate:root > 0)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### ruler
Scope to the ruler of a country
Input Scopes: country
Output Scopes: character

### technology_being_researched
Scope to the current technology a country is researching
Input Scopes: country
Output Scopes: technology

### techs_researched
Scope to the current amount of techs researched of a country
Input Scopes: country
Output Scopes: value

### tension
Scope to tension between two countries (example: tension:root >= 2)
Requires Data: yes
Input Scopes: country
Output Scopes: value

### top_overlord
Scope to the top overlord of the country in scope
Input Scopes: country
Output Scopes: country

### pop_weight_modifier_scale
Get the Pop's weight modifier scale multiplier
Input Scopes: pop
Output Scopes: value

### workplace
Scope to the workplace of a pop
Input Scopes: pop
Output Scopes: building

### attacker_side
Scope from a battle to the BattleSide corresponding to the attacker
Input Scopes: battle
Output Scopes: battle_side

### defender_side
Scope from a battle to the BattleSide corresponding to the defender
Input Scopes: battle
Output Scopes: battle_side

### num_garrison_units
Returns the number of units garrisoned in a HQ
Input Scopes: hq
Output Scopes: value

### civil_war
Scope to the civil war started by the scoped (revolutionary) political movement.
Input Scopes: political_movement
Output Scopes: civil_war

### most_desired_law
Scope to the law type that political movement most desires to be enacted (if any).
Input Scopes: political_movement
Output Scopes: law_type

### ai_state_value
Scope to target country AI desire to own scope state (example: value = ai_state_value:root)
Requires Data: yes
Input Scopes: state
Output Scopes: value

### ai_treaty_port_value
Scope to target country AI desire to have a treaty port in scope state (example: value = ai_treaty_port_value:root)
Requires Data: yes
Input Scopes: state
Output Scopes: value

### b
Scope to the building of specified key in the state
Requires Data: yes
Input Scopes: state
Output Scopes: building

### decree_cost
Scope to a state's cost for a certain decree
authority > decree_cost:decree_road_maintaintenance
Requires Data: yes
Input Scopes: state
Output Scopes: value

### mass_migration_culture
Scope to the mass migration target culture of a state
Input Scopes: state
Output Scopes: culture

### nf
Scope to a Decree of specified key applied to the state
Requires Data: yes
Input Scopes: state
Output Scopes: decree

### num_world_market_hub_trade_center_levels
Get the total number of trade center levels associated with scope world market hub state
Input Scopes: state
Output Scopes: value

### population_below_expected_sol
Scope to the current percentage of the state's population that are below their expected standard of living (0-1)
Input Scopes: state
Output Scopes: value

### sg
Scope from a state to the StateGoods with the specified key
Requires Data: yes
Input Scopes: state
Output Scopes: state_goods

### state_region
Scope to the state region of a state
Input Scopes: state
Output Scopes: state_region

### building
Scope to the related building
Input Scopes: new_combat_unit
Output Scopes: building

### defense
Returns the unit's defense rating (including impact from their commander)
Input Scopes: new_combat_unit
Output Scopes: value

### demoralized
Returns the unit's number of demoralized manpower
Input Scopes: new_combat_unit
Output Scopes: value

### manpower
Returns the unit's manpower
Input Scopes: new_combat_unit
Output Scopes: value

### mobilization
Returns the unit's mobilization value between 0 and 1
Input Scopes: new_combat_unit
Output Scopes: value

### morale
Returns the unit's morale
Input Scopes: new_combat_unit
Output Scopes: value

### offense
Returns the unit's offense rating (including impact from their commander)
Input Scopes: new_combat_unit
Output Scopes: value

### ig
Scope to the interest group of specified key belonging to the country
Requires Data: yes
Input Scopes: country, political_movement
Output Scopes: interest_group

### average_expected_sol
Get the average expected Standard of Living of the scope
Input Scopes: country, state
Output Scopes: value

### average_sol
Get the average Standard of Living of the scope
Input Scopes: country, state
Output Scopes: value

### gdp
Get the scoped country's yearly predicted GDP
Input Scopes: country, state
Output Scopes: value

### migration_pull
Get the migration pull for a state or the mass migration pull for a country.
Input Scopes: country, state
Output Scopes: value

### investment
Scope to current investment level in an institution (example: investment < investment_max)
Input Scopes: institution
Output Scopes: value

### investment_max
Scope to the country's current maximum investment level in an institution (example: investment < investment_max)
Input Scopes: institution
Output Scopes: value

### enforced_on_country
Scope to the enforced_on_country of an enforced treaty
Input Scopes: treaty
Output Scopes: country

### enforcer_country
Scope to the enforcer_country of an enforced treaty
Input Scopes: treaty
Output Scopes: country

### goods
Scope to the goods traded by a trade route
Input Scopes: market_goods, state_goods
Output Scopes: goods

### command_limit_num_units
Get the baseline number of units from their military formation a commander would normally get, depending on their command limit
Input Scopes: character
Output Scopes: value

### commander_military_formation
Scope to the Military Formation of a Character.
Input Scopes: character
Output Scopes: military_formation

### ideology
Scope to the ideology of the scoped character (example: scope:example_character = { ideology = { save_scope_as = example_ideology } } )
Input Scopes: character
Output Scopes: ideology

### interest_group
Scope to the interest group of the character!
Input Scopes: character
Output Scopes: interest_group

### interest_group_type
Scope to the type of the scoped character's interest group
Input Scopes: character
Output Scopes: interest_group_type

### num_battalions
Returns the number of active battalions under a commander
Input Scopes: character
Output Scopes: value

### num_mobilized_battalions
Returns the number of fully mobilized units under a General
Input Scopes: character
Output Scopes: value

### num_units_share
Share of units a commander has considering his command limit. Example: if the character has 30 Command Limit, the fleet has 60 total Command Limit, and the formation has 50 total flotillas, then the character should get 25 flotillas for their battle)
Input Scopes: character
Output Scopes: value

### opposing_commander
Scope from a character in battle to the character on the other side of the battle
Input Scopes: character
Output Scopes: character

### popularity
Get the scoped character's popularity, normally ranging between -100 and +100
Input Scopes: character
Output Scopes: value

### slaves_role
Scope from building type to it's slaves role pop type
Input Scopes: building_type
Output Scopes: pop_type

### home_country
Scopes to the home country of an exile
Input Scopes: character, pop
Output Scopes: country

### num_units
Get the number of active units for a commander or military formation
Input Scopes: character, military_formation
Output Scopes: value

### num_units_in_battle
Get the number of active units in battle for a commander or military formation
Input Scopes: character, military_formation
Output Scopes: value

### num_units_not_in_battle
Get the number of active units not in battle for a commander or military formation
Input Scopes: character, military_formation
Output Scopes: value

### culture
Scope to pop's or character's culture
Input Scopes: character, new_combat_unit, political_movement, pop
Output Scopes: culture

### currently_active_law_in_group
Scope from a law to the currently active law in that group
Input Scopes: law
Output Scopes: law

### combat_width
Scope to combat width multiplier of scope province
Input Scopes: province
Output Scopes: value

### naval_controller_hq
Returns the province or state controller navy HQ
Input Scopes: province
Output Scopes: hq

### naval_hq
Returns the province or state owner local navy HQ
Input Scopes: province
Output Scopes: hq

### num_provinces
Get the scoped entity's current number of provinces
scopes: state, stateregion, front
Input Scopes: front, state, state_region
Output Scopes: value

### imposer_of_law
Scope from a country to the country currrently imposing a law on them
Input Scopes: country, law
Output Scopes: country

### religion
Scope to country or country definition's primary religion or pop religion
Input Scopes: country, character, country_definition, political_movement, pop
Output Scopes: religion

### owner
Scope to the owner country of object
Input Scopes: country, building, character, new_combat_unit, company, decree, institution, interest_marker, interest_group, journal_entry, law, market, market_goods, military_formation, political_movement, pop, province, state
Output Scopes: country

### base_price
Get the base price of the scoped good
Input Scopes: goods
Output Scopes: value


--------------------

Event Targets Saved from Code:

context
area
attacker
defender
actor
recipient
country_formation
ally
initiator
target
goods
workplace
region
diplomatic_play
diplomatic_play_type
technology
diplomatic_action
diplomatic_pact
market
trade_center
command
target_region
target_country
power_bloc
with_country
without_country
group
goal_holder
evaluation
state
target_state
first_state
second_state
epicentre
intensity
interest_group
political_movement
revolutionary_faction
new_character
war
neighbor
theater
type
country
culture
religion
combat_unit_type
num_states
num_units
num_levels
notification_target
notification_ignore
previous
next
overlord
subject
role
general
admiral
army
fleet
politician
is_monarch
character
pop
rank
hq
front
journal_entry
battle
own_commander
enemy_country
enemy_commander
attacker_commander
defender_commander
province
is_naval_invasion
is_advancing_side
is_military_formation
is_initiator
law
number
relations
distance_to_strategic_objective
distance_to_closest_war_goal
occupation_fraction
military_formation
is_strategic_objective
investor_country
has_interest
has_capital_interest
is_adjacent_to_strategic_objective
company_type
company
political_lobby
diplomatic_catalyst
duration
successful_contender
failed_contender
selected_identity
wargoal_impact
clout
withdrawing_country
non_withdrawing_country
treaty
is_treaty_active
treaty_options
binding_period
article
article_options
first_country
second_country
source_country
other_country
input
market_goods
quantity
building
